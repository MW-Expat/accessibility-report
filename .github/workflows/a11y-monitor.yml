name: Weekly accessibility audit

on:
  schedule:
    - cron:  '0 6 * * 1'   # 06:00 every Monday UTC :contentReference[oaicite:4]{index=4}
  workflow_dispatch:       # manual run button

jobs:
  audit:
    permissions: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
      contents: write
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    env:
      RAW_DATE: ${{ github.run_started_at }}
    steps:
      - name: Sanitize REPORT_DATE
        shell: bash
        run: echo "REPORT_DATE=$(date -d "$RAW_DATE" '+%Y-%m-%d')" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: ▸ Install Chrome Canary (puppeteer/browsers)
        run: |
          npm install --no-save @puppeteer/browsers@latest
          npx -y @puppeteer/browsers@latest install chrome@canary

          # Attempt 1: use CLI helper to get path
          CHROME_PATH=$(npx -y @puppeteer/browsers@latest path chrome@canary || true)

          # Fallback: find the binary manually if CLI didn't return
          if [ -z "$CHROME_PATH" ]; then
            CHROME_PATH=$(find "$HOME/work" -type f -path "*chrome-linux64/chrome" | head -n1 || true)
          fi

          if [ ! -x "$CHROME_PATH" ]; then
            echo "Chrome Canary binary not found!" >&2; exit 1;
          fi

          echo "CHROME_PATH=$CHROME_PATH" >> $GITHUB_ENV
          echo "Resolved Chrome Canary path: $CHROME_PATH"

      - run: npm ci

      - name: Fetch published site
        uses: actions/checkout@v4
        with:
          ref: gh-pages          # ← your published branch
          path: site             # keep it separate from the source checkout
          fetch-depth: 0

      # ───────── Lighthouse CI (exec-summary for execs) ─────────
      - name: Lighthouse CI
        env:
          REPORT_DATE: ${{ env.REPORT_DATE }}
          CHROME_PATH: ${{ env.CHROME_PATH }}
        run: |
          npx lhci autorun
        continue-on-error: true

      # ───────── Pa11y-CI (full WCAG backlog) ─────────
      - name: Pa11y CI
        env:
          REPORT_DATE: ${{ env.REPORT_DATE }}
        run: |
          mkdir -p ./public/pa11y/$REPORT_DATE
          npx pa11y-ci --config .pa11yci.js
        continue-on-error: true

      # after your Pa11y/LHCI steps
      - name: Merge latest reports into published site
        shell: bash
        run: |
          mkdir -p             site/public/pa11y
          rsync -a --delete    public/pa11y/          site/public/pa11y/

          mkdir -p             site/public/lhci
          rsync -a --delete    public/lhci/           site/public/lhci/

      # ▸ Build umbrella index (root + per-run)
      - name: ▸ Build Lighthouse umbrella index
        env:
          REPORT_DATE: ${{ env.REPORT_DATE }}
        shell: bash
        run: |
          ############################################################################
          # 0. Basic paths
          ############################################################################
          parent="site/public/lhci"        # where LHCI artifacts live
          mkdir -p "$parent"

          ############################################################################
          # 1. Root index   —  lists every historical run
          ############################################################################
          cat > "$parent/index.html" <<'HTML'
          <!doctype html><html lang="en"><head>
          <meta charset="utf-8"/>
          <title>All Lighthouse runs</title>
          <style>
          body{font-family:system-ui;margin:0;padding:2rem}
          h1{margin-top:0}
          .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(220px,1fr));gap:1rem}
          a{display:block;padding:1rem;border:1px solid #d0d7de;border-radius:6px;
          text-decoration:none;color:#1f2328;background:#f6f8fa}
          </style>
          </head><body>
          <h1>All Lighthouse runs</h1>
          <div class="grid">
          HTML
          
          # newest-first links to every dated folder
          for run in $(ls -1dt "$parent"/*/); do
          run_dir=$(basename "$run")
          echo "<a href=\"${run_dir}/index.html\">${run_dir}</a>" >> "$parent/index.html"
          done
          
          echo "</div></body></html>" >> "$parent/index.html"
          
          ############################################################################
          # 2. Per-run index   —  choose a page, Viewer shows it
          ############################################################################
          latest=$(ls -1dt "$parent"/*/ | head -n1)   # most-recent run dir
          cd "$latest"
          
          cat > index.html <<'HTML'
          <!doctype html><html lang="en"><head>
          <meta charset="utf-8"/>
          <title>Lighthouse run</title>
          <style>
          body{margin:0;font-family:system-ui}
          header{display:flex;align-items:center;gap:.5rem;padding:.75rem 1rem;
          background:#f6f8fa;border-bottom:1px solid #d0d7de}
          select{font-size:1rem;padding:.25rem}
          iframe{width:100%;height:90vh;border:0}
          </style>
          <script>
          // ––––– helpers –––––
          const runBase = location.href.replace(/\/index\.html?$/, '/');           // folder URL
          const viewer   = 'https://googlechrome.github.io/lighthouse/viewer/?jsonurl=';
          
          function loadReport(sel){
          const abs = encodeURIComponent(runBase + sel.value);                   // absolute JSON URL
          document.getElementById('viewer').src = viewer + abs;                  // → Viewer
          }
          </script>
          </head><body>
          <header>
          <label for="reportSel">Page:</label>
          <select id="reportSel" onchange="loadReport(this)">
          HTML
          
          # dropdown options for every JSON report
          for report in report-*.json; do
          label=$(echo "$report" | sed 's/^report-//;s/\.json$//')
          echo "    <option value=\"$report\">$label</option>" >> index.html
          done
          
          cat >> index.html <<'HTML'
          </select>
          <span style="margin-left:auto;font-size:.9rem;opacity:.7;">
          (Viewer opens automatically)
          </span>
          </header>
          
          <iframe id="viewer" src="" title="Lighthouse report"></iframe>
          
          <script>
          // load first report right away
          document.getElementById('reportSel').dispatchEvent(new Event('change'));
          </script>
          </body></html>
          HTML

      # ───────── Build umbrella index for Pa11y reports ─────────
      - name: ▸ Build umbrella index (Pa11y)
        shell: bash
        working-directory: site/public/pa11y
        run: |
          ###########################################################################
          # 0. Root listing of all historic runs
          ###########################################################################
          cat > index.html <<'HTML'
          <!doctype html><html lang="en"><head>
          <meta charset="utf-8"/>
          <title>All Pa11y runs</title>
          <style>
          body{font-family:system-ui;margin:0;padding:2rem}
          h1{margin:0 0 1rem}
          .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(220px,1fr));gap:1rem}
          a{display:block;padding:1rem;border:1px solid #d0d7de;border-radius:6px;
          text-decoration:none;color:#1f2328;background:#f6f8fa}
          </style>
          </head><body>
          <h1>All Pa11y runs</h1>
          <div class="grid">
          HTML
          
          # newest-first links to every dated folder
          for run in $(ls -1dt */); do
          run_dir=${run%/}                       # strip trailing “/”
          echo "<a href=\"${run_dir}/index.html\">${run_dir}</a>" >> index.html
          done
          
          echo "</div></body></html>" >> index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          keep_files: true      # preserves historical folders
          commit_message: "chore(reports): deploy ${{ github.run_id }} on ${{ env.REPORT_DATE }}"