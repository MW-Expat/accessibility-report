name: Weekly accessibility audit

on:
  schedule:
    - cron:  '0 6 * * 1'   # 06:00 every Monday UTC :contentReference[oaicite:4]{index=4}
  workflow_dispatch:       # manual run button

jobs:
  audit:
    permissions: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
      contents: write
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    env:
      RAW_DATE: ${{ github.run_started_at }}
    steps:
      - name: Sanitize REPORT_DATE
        shell: bash
        run: echo "REPORT_DATE=$(date -d "$RAW_DATE" '+%Y-%m-%d')" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: ▸ Install Chrome Canary (puppeteer/browsers)
        run: |
          npm install --no-save @puppeteer/browsers@latest
          npx -y @puppeteer/browsers@latest install chrome@canary

          # Attempt 1: use CLI helper to get path
          CHROME_PATH=$(npx -y @puppeteer/browsers@latest path chrome@canary || true)

          # Fallback: find the binary manually if CLI didn't return
          if [ -z "$CHROME_PATH" ]; then
            CHROME_PATH=$(find "$HOME/work" -type f -path "*chrome-linux64/chrome" | head -n1 || true)
          fi

          if [ ! -x "$CHROME_PATH" ]; then
            echo "Chrome Canary binary not found!" >&2; exit 1;
          fi

          echo "CHROME_PATH=$CHROME_PATH" >> $GITHUB_ENV
          echo "Resolved Chrome Canary path: $CHROME_PATH"

      - run: npm ci

      # ───────── Lighthouse CI (exec-summary for execs) ─────────
      - name: Lighthouse CI
        env:
          REPORT_DATE: ${{ env.REPORT_DATE }}
          CHROME_PATH: ${{ env.CHROME_PATH }}
          LHCI_CHROMIUM_FLAGS: "--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --headless=new --disable-gpu"
        run: |
          npx lhci autorun --chrome-flags="$LHCI_CHROMIUM_FLAGS" --collect.settings.chromePath="$CHROME_PATH"
        continue-on-error: true

      # ───────── Pa11y-CI (full WCAG backlog) ─────────
      - name: Pa11y CI
        env:
          REPORT_DATE: ${{ env.REPORT_DATE }}
        run: |
          mkdir -p ./public/pa11y/$REPORT_DATE
          npx pa11y-ci --config .pa11yci.js
        continue-on-error: true

          # ───────── Build umbrella index.html (latest only) ─────────
      - name: ▸ Build umbrella index
        shell: bash
        run: |
         parent="public/pa11y"
         mkdir -p "$parent"
         latest=$(ls -1d "$parent"/*/ | sort -r | head -n1 | xargs -n1 basename)
         
         cat > "$parent/index.html" <<HTML
          <!doctype html><html lang="en"><head><meta charset="utf-8"><title>Latest Accessibility Report</title><style>body{font-family:system-ui;margin:0}header{padding:1rem 2rem;background:#f6f8fa;border-bottom:1px solid #d0d7de}h1{font-size:1.4rem;margin:0}iframe{width:100%;height:90vh;border:0}</style></head><body><header><h1>Latest Accessibility Report – $latest</h1></header><iframe src="$latest/index.html" title="Accessibility report"></iframe></body></html>

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true      # preserves historical folders
          commit_message: "chore(reports): deploy ${{ github.run_id }} on ${{ env.REPORT_DATE }}"